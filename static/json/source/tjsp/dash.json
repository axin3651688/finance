{
    "id": 1,
    "text": "智慧驾驶舱",
    "rows": [],
    "rootParams": {
        "rootItem": "Y"
    },
    "columns": [{
            "id": "id",
            "type": "string",
            "text": "编码"
        },
        {
            "id": "bq",
            "type": "number",
            "text": "本期数",
            "unit": "万元"
        },
        {
            "id": "bnlj",
            "type": "number",
            "text": "本年累计",
            "unit": "万元"
        },
        {
            "id": "bnmb",
            "type": "number",
            "text": "本年目标",
            "unit": "万元"
        },
        {
            "id": "sntq",
            "type": "number",
            "text": "上年同期",
            "unit": "万元"
        },
        {
            "id": "wcl",
            "type": "number",
            "text": "完成率",
            "unit": "%"
        }
    ],
    "unit": 10000,
    "datas": {},
    "config": {
        "sql": "SELECT B.SCODE AS id,B.SNAME AS ITEM ,SUM(BQ)AS BQ,SUM(BNLJ) AS BNLJ,SUM(SNTQ) AS SNTQ ,SUM(BNMB) AS BNMB ,CASE WHEN SUM(BNMB) = 0 THEN 0 ELSE ROUND(SUM(BNLJ) / SUM(BNMB)* 100, 4) END AS WCL FROM( SELECT DIM_ITEMPERIOD,SUM(BQ)AS BQ,SUM(BNLJ) AS BNLJ,SUM(SNTQ) AS SNTQ ,SUM(BNMB) AS BNMB FROM ( SELECT DIM_ITEMPERIOD, SUM(CASE WHEN DIM_PERIOD=:period THEN FACT_A ELSE 0 END) AS BQ, SUM(CASE WHEN DIM_PERIOD=:comparePeriod THEN FACT_B ELSE 0 END) AS SNTQ, SUM(CASE WHEN DIM_PERIOD=:period THEN FACT_B ELSE 0 END) AS BNLJ, 0 AS BNMB FROM DW_FACTFINANCEPERIOD WHERE DIM_COMPANY=:company AND DIM_PERIOD IN (:period,:comparePeriod) AND DIM_ITEMPERIOD IN ('1416001','1403100') GROUP BY DIM_ITEMPERIOD UNION ALL SELECT '1416001' AS DIM_ITEMPERIOD ,0 AS BQ,0 AS SNTQ,0 AS BNLJ ,FACT_A AS BNMB FROM DW_FACTTARGETASSESSMENT WHERE DIM_PERIOD=:period AND DIM_COMPANY=:company UNION ALL SELECT '1403100' AS DIM_ITEMPERIOD ,0 AS BQ,0 AS SNTQ,0 AS BNLJ ,FACT_B AS BNMB FROM DW_FACTTARGETASSESSMENT WHERE DIM_PERIOD=:period AND DIM_COMPANY=:company) GROUP BY DIM_ITEMPERIOD )A INNER JOIN DW_DIMITEMPERIOD B ON B.SCODE = A.DIM_ITEMPERIOD GROUP BY B.SNAME, B.SCODE ",
        "_cube": {
            "subject": "0002",
            "cubeId": 4
        },
        "mainDim": "itemperiod",
        "random": {
            "min": 100,
            "max": 100000
        },
        "needDims": ["year", "month", "company"],
        "type": 1,
        "generateVar": {
            "periodCount": 2,
            "compareType": "-1&0",
            "reverse": true
        }

    },
    "changeCompanyBefore": function(params, $vue) {
        $vue.closeTabTaget(params, $vue);
    },
    "changeMonthBefore": function(params, $vue) {
        $vue.closeTabTaget(params, $vue);
    },
    "changeYearBefore": function(params, $vue) {
        $vue.closeTabTaget(params, $vue);
    },
    "layout": {
        "xtype": "tab"
    },
    "show": true,
    "__queryDataAfter": function(data) {

        let me = this;
        let columns = me.columns;
        let unit = me.unit;
        if (columns && columns.length > 0) {
            for (let i = 0; i < data.length; i++) {
                let dataItem = data[i];
                for (let j = 0; j < columns.length; j++) {
                    let columnItem = columns[j];
                    if (columnItem.unit && columnItem.unit == "万元") {
                        let columnId = columnItem.id;
                        if (dataItem[columnId]) {
                            dataItem[columnId] = dataItem[columnId] / (unit ? unit : 10000);
                        }
                    }
                }
            }
        }
        return data;
    },
    "items": [{
            "layout": {
                "xtype": "column"
            },
            "id": "888",
            "text": "指标分析",

            "children": [{
                    "xtype": "chart",
                    "id": "235",
                    "text": "营业收入目标完成率（%）",
                    "weight": 6,
                    "watchState": true,
                    "extendConfig": "p", //继承父元素的config，查询出来的内容，这个是在切换上面的导航栏的内容用到的。
                    // "watchValue":true,
                    "watchConfig": {
                        "itemNames": ["bnlj", "bnmb", "wcl"]
                    },
                    "extendDrillPeriod": true, //下钻的时候使用点击的下钻的日期。
                    "show": true,
                    "GItemScode": "1416001",
                    "conversion": {
                        "id": 1,
                        "text": "元"
                    },
                    "customTabName": {
                        "way": "joint",
                        "position": "before",
                        "text": "公司"
                    },
                    "listeners": [{
                        "type": "click",
                        "way": "addTab",
                        "addTabBefore": ($vue, params, listener, bb) => {

                            let me = this,
                                flag = true;
                            let itemscode = $vue.item.GItemScode;
                            if (itemscode) {
                                $vue.$store.itemscode = itemscode;
                            }
                            //处理bb钻取的民称。
                            // bb = {
                            //         "way": "joint",
                            //         "position": "before",
                            //         "text": "公司"
                            //     }
                            // $vue.$confirm('选择板块/公司进行下钻？', '提示', {

                            // 	confirmButtonText: '公司',
                            // 	// confirmButtonText: '确定2',
                            // 	cancelButtonText: '板块',
                            // 	distinguishCancelAndClose:true,
                            // 	type: 'warning'
                            // 	// ,
                            // 	// beforeClose:function(action, instance, done){
                            // 	// 	
                            // 	// 	$vue[listener.way](params, listener, bb);
                            // 	// }
                            // }).then(() => {

                            // 	let api = "/cnbi/json/source/tjsp/dashDrillCompany.json";
                            // 	if(listener.sourceApi){
                            // 		listener.sourceApi = api;
                            // 	}
                            // 	if (listener.way && $vue[listener.way]) {
                            // 		$vue[listener.way](params, listener, bb);
                            // 	}
                            // 	// $vue.$message({
                            // 	//   	type: 'success',
                            // 	//   	message: '删除成功!'
                            // 	// });
                            // }).catch((e) => {
                            // 	//取消时的回调，此时设置成别的钻取
                            // 	if(e == "cancel"){
                            // 		$vue[listener.way](params, listener, bb);
                            // 	}else if(e == "close"){
                            // 		console.log("关闭弹框：",e);
                            // 	}else{
                            // 		console.log(e);
                            // 		$vue.$message({
                            // 			type: 'info',
                            // 			message: '出错了，请联系运维人员！'
                            // 		});      
                            // 	}

                            // });
                            return flag;
                        },
                        "sourceApi": "/cnbi/json/source/tjsp/ybpDebug.json",
                        "handler": ($vue, params) => {

                            // $vue.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {
                            // 	confirmButtonText: '确定',
                            // 	cancelButtonText: '取消',
                            // 	type: 'warning'
                            // }).then(() => {
                            // 	$vue.$message({
                            // 	  	type: 'success',
                            // 	  	message: '删除成功!'
                            // 	});
                            // }).catch(() => {
                            // 	$vue.$message({
                            // 	  	type: 'info',
                            // 	  	message: '已取消删除'
                            // 	});          
                            // });
                            let me = this;
                            let itemscode = $vue.item.GItemScode;
                            if (itemscode) {
                                $vue.$store.itemscode = itemscode;
                            }
                        }
                    }],
                    "options": {
                        "type": "gauge",
                        "getData": {
                            "value": "wcl$1416001",
                            "type": 1
                        }
                    }
                },
                {
                    "xtype": "chart",
                    "id": "235",
                    "text": "利润总额目标完成率（%）",
                    "weight": 6,
                    "watchState": true,
                    "extendConfig": "p", //继承父元素的config，查询出来的内容，这个是在切换上面的导航栏的内容用到的。
                    "watchConfig": {
                        "itemNames": ["bnlj", "bnmb", "wcl"]
                    },
                    "customTabName": {
                        "way": "joint",
                        "position": "before",
                        "text": "公司"
                    },
                    "show": true,
                    "listeners": [{
                        "type": "click",
                        "way": "addTab",
                        "addTabBefore": ($vue, params, listener, bb) => {

                            let me = this,
                                flag = true;
                            let itemscode = $vue.item.GItemScode;
                            if (itemscode) {
                                $vue.$store.itemscode = itemscode;
                            }
                            return flag;
                        },
                        "sourceApi": "/cnbi/json/source/tjsp/ybpDebug.json",
                        "handler": ($vue, params) => {
                            let me = this;
                            let itemscode = $vue.item.GItemScode;
                            if (itemscode) {
                                $vue.$store.itemscode = itemscode;
                            }
                        }
                    }],
                    "GItemScode": "1403100",
                    "options": {
                        "type": "gauge",
                        "getData": {
                            "value": "wcl$1403100",
                            "type": 1
                        }
                    }
                },
                {
                    "xtype": "chart",
                    "id": "14001112",
                    "text": "营业收入（万元）",
                    "watchState": true,
                    "customTabName": {
                        "way": "joint",
                        "position": "before",
                        "text": "公司"
                    },
                    "extendConfig": "p", //继承父元素的config，查询出来的内容，这个是在切换上面的导航栏的内容用到的。
                    "weight": 6,
                    "listeners": [{
                        "type": "click",
                        "way": "addTab",
                        "addTabBefore": ($vue, params, listener, bb) => {

                            let me = this,
                                flag = true;
                            let itemscode = $vue.item.GItemScode;
                            if (itemscode) {
                                $vue.$store.itemscode = itemscode;
                            }
                            return flag;
                        },
                        "sourceApi": "/cnbi/json/source/tjsp/ybpDebug.json",
                        "handler": ($vue, params) => {
                            let me = this;
                            let itemscode = $vue.item.GItemScode;
                            if (itemscode) {
                                $vue.$store.itemscode = itemscode;
                            }
                        }
                    }],
                    "GItemScode": "1416001",
                    "options": {
                        "type": "column",
                        "getData": {
                            "type": 2,
                            "columns": [{
                                "id": "bnlj",
                                "_name": "本期"
                            }, {
                                "id": "sntq"
                            }],
                            "row": {
                                "ids": {
                                    "items": ["1416001"]
                                }
                            },
                            "reverse": true,
                            "scope": true
                        }
                    }
                },
                {
                    "xtype": "chart",
                    "id": "1400111",
                    "text": "利润总额（万元）",
                    "extendConfig": "p", //继承父元素的config，查询出来的内容，这个是在切换上面的导航栏的内容用到的。
                    "watchState": true,
                    "weight": 6,
                    "listeners": [{
                        "type": "click",
                        "way": "addTab",
                        "addTabBefore": ($vue, params, listener, bb) => {
                            let me = this,
                                flag = true;
                            let itemscode = $vue.item.GItemScode;
                            if (itemscode) {
                                $vue.$store.itemscode = itemscode;
                            }
                            return flag;
                        },
                        "sourceApi": "/cnbi/json/source/tjsp/ybpDebug.json",
                        "handler": ($vue, params) => {
                            let me = this;
                            let itemscode = $vue.item.GItemScode;
                            if (itemscode) {
                                $vue.$store.itemscode = itemscode;
                            }
                        }
                    }],
                    "GItemScode": "1403100",
                    "customTabName": {
                        "way": "joint",
                        "position": "before",
                        "text": "公司"
                    },
                    "options": {
                        "type": "column",
                        "getData": {
                            "type": 2,
                            "columns": [{
                                "id": "bnlj"
                            }, {
                                "id": "sntq"
                            }],
                            "row": {
                                "ids": {
                                    "items": ["1403100"]
                                }
                            },
                            "reverse": true,
                            "scope": true
                        }
                    }
                },
                {
                    "xtype": "chart",
                    "id": "lrb3000000",
                    "text": "应收账款（万元/%）",
                    "watchState": true,
                    "watchValue": true, //是不是当数据都为零时，不显示。
                    "weight": 12,
                    "unit": "万元",
                    "listeners": [{
                        "type": "click",
                        "clickBefore": function(params, $vue) {
                            if (!$vue.$store.getters.treeInfo.leaf && $vue.$store.getters.treeInfo.id != "121") {
                                //params.sourceApi = "cnbi/json/source/tjsp/yszkTwoDebug.json";
                                params.sourceApi = "/cnbi/json/source/tjsp/yszkDebugDemo.json";
                                return params;
                            }
                            params.sourceApi = "/cnbi/json/source/tjsp/yszkDebugDemo.json";
                            return params;
                        },
                        "way": "addTab",
                        "sourceApi": "/cnbi/json/source/tjsp/yszkTwoDebug.json",
                        "handler": ($vue, params) => {
                            $vue.optionParams = params;
                            let selectPeriod = params.name;
                            let data;
                            if (selectPeriod) {
                                $vue.$store.selectPeriod = selectPeriod;
                            }

                        }
                    }],

                    "config": {
                        "sql": "WITH NOWYEAR AS( SELECT DISTINCT DIM_PERIOD,SUM(FACT_BALANCE) AS FACT_BALANCE FROM DW_FACTAGEANALYSIS WHERE DIM_PERIOD BETWEEN (TO_CHAR(TO_DATE(:period,'YYYYMM')-INTERVAL '11' MONTH,'YYYYMM')) AND :period AND DIM_CUSUPPLIERNAME IS NOT NULL AND DIM_COMPANY IN (SELECT SCODE FROM DW_DIMCOMPANY WHERE (SCODE LIKE :company||'%' OR SCODE=:company) AND STYPE='1' AND CISDEL='N') AND DIM_ITEM='1001' GROUP BY DIM_PERIOD), LASTYEAR AS ( SELECT DISTINCT DIM_PERIOD,SUM(FACT_BALANCE) AS FACT_BALANCE FROM DW_FACTAGEANALYSIS WHERE DIM_PERIOD like '%12' AND DIM_CUSUPPLIERNAME IS NOT NULL AND DIM_COMPANY IN (SELECT SCODE FROM DW_DIMCOMPANY WHERE (SCODE LIKE :company||'%' OR SCODE=:company) AND STYPE='1' AND CISDEL='N') AND DIM_ITEM='1001' GROUP BY DIM_PERIOD) SELECT :company AS DIM_COMPANY, C.SCODE as period,SAFE,PROMPT, (CASE WHEN (NVL(B.FACT_BALANCE,0))=0 THEN 0 ELSE ROUND((NVL(A.FACT_BALANCE,0)-NVL(B.FACT_BALANCE,0))/(NVL(B.FACT_BALANCE,0)),4) END) AS ZJL, NVL(A.FACT_BALANCE,0) AS YE FROM NOWYEAR A LEFT JOIN LASTYEAR B ON SUBSTR(A.DIM_PERIOD,1,4)=to_char(to_number(SUBSTR(B.DIM_PERIOD,1,4))+1) RIGHT JOIN (SELECT DISTINCT SCODE,SUM(CASE WHEN SRATIOTYPE='1' THEN D.FACT_A ELSE 0 END) AS SAFE, SUM(CASE WHEN SRATIOTYPE='2' THEN D.FACT_A ELSE 0 END ) AS PROMPT FROM (SELECT '1' AS FLAG,SCODE,CTYPE FROM DW_DIMPERIOD) A LEFT JOIN (SELECT '1' AS FLAG,SRATIOTYPE,FACT_A FROM DW_FACTAGEANALYSIS_PERCENT WHERE DIM_PERIOD=:period AND DIM_COMPANY=:company) D ON D.FLAG=A.FLAG WHERE A.SCODE BETWEEN (TO_CHAR(TO_DATE(:period,'YYYYMM')-INTERVAL '11' MONTH,'YYYYMM')) AND :period AND CTYPE='4' GROUP BY SCODE) C ON A.DIM_PERIOD=C.SCODE ORDER BY C.SCODE",
                        "_cubes": {
                            "subject": "0002",
                            "dims": {
                                "itemperiod": "1416001,1403100,1400111",
                                "period": 0
                            },
                            "dimName": "period",
                            "cubeId": 2
                        },
                        "random": {
                            "min": 100,
                            "max": 100000
                        },
                        "mainDim": "period",
                        "needDims": ["company", "year", "month"],
                        "type": 2,
                        "generateVar": {
                            "periodCount": 2,
                            "compareType": "-1&0",
                            "reverse": true
                        },
                        "rows": [],
                        "columns": [{
                                "id": "period",
                                "type": "string",
                                "text": "日期"
                            },
                            {
                                "id": "safe",
                                "type": "number",
                                "text": "安全值"
                            },
                            {
                                "id": "prompt",
                                "type": "number",
                                "text": "预警值"
                            },
                            {
                                "id": "zjl",
                                "type": "number",
                                "text": "与年初相比增减率"
                            },
                            {
                                "id": "ye",
                                "type": "number",
                                "text": "本年累计"
                            }
                        ]
                    },
                    "conversionUnit": function(unit) {
                        let me = this;
                        let unitObjs = [
                            { "text": "万元", "value": 10000 },
                            { "text": "千元", "value": 1000 },
                            { "text": "百元", "value": 100 },
                            { "text": "十元", "value": 10 },
                            { "text": "元", "value": 1 }
                        ];
                        if (!unit) {
                            unit = me.unit;
                        }
                        if (!unit) {
                            unit = "元";
                        }
                        for (let i = 0; i < unitObjs.length; i++) {
                            let unitItem = unitObjs[i];
                            if (unitItem.text == unit) {
                                return unitItem.value;
                            }
                        }
                        return 1;
                    },
                    "queryDataAfter": function(data) {
                        let me = this;
                        let columns = me.options.getData.columns;
                        let unit = me.unit;
                        unit = me.conversionUnit(unit);
                        if (columns && columns.length > 0) {
                            for (let i = 0; i < data.length; i++) {
                                let dataItem = data[i];
                                for (let j = 0; j < columns.length; j++) {
                                    let columnItem = columns[j];
                                    if (columnItem.unit && columnItem.unit == "万元") {
                                        let columnId = columnItem.id;
                                        if (dataItem[columnId]) {
                                            dataItem[columnId] = dataItem[columnId] / (unit ? unit : 10000);
                                        }
                                    }
                                }
                            }
                        }
                        return data;
                    },
                    "optionsBefore": function() {},
                    "options": {
                        "type": "line",
                        "getData": {
                            "type": 3,
                            "columns": [{
                                    "id": "period",
                                    "type": "category"
                                },
                                {
                                    "id": "zjl",
                                    "name": "与年初相比增减率",
                                    "type": "line",
                                    "smooth": false,
                                    "unit": "%"
                                },
                                {
                                    "id": "safe",
                                    "name": "安全值",
                                    "type": "line",
                                    "smooth": false,
                                    "unit": "%",
                                    "show": "leaf" //子公司不显示
                                },
                                {
                                    "id": "prompt",
                                    "name": "预警值",
                                    "type": "line",
                                    "smooth": false,
                                    "unit": "%",
                                    "show": "leaf" //子公司不显示
                                },
                                {
                                    "id": "ye",
                                    "name": "本年累计",
                                    "type": "bar",
                                    "smooth": false,
                                    "unit": "万元"
                                }
                            ]
                        },
                        //    "color":['#1FE5BD','#A5AEFF','#26BAEE','#FE5578']   zdk 2019-1-8 14:09:00  ly 和 boss说不要红色橙色，这有特殊意义
                        "color": ['#9a7fd1', '#07a2a4', '#FE5578', '#2ec7c9'], //紫色变化率，绿色安全，红色预警，淡蓝柱图
                        "optionListeners": { //生成图形的回调，可以之前或者是之后，处理option，要显示的指定内容。
                            "type": "before",
                            "handlerBefore": function($vue, option) {
                                let me = this,
                                    optionCurrent;
                                optionCurrent = me.deepCopy(option); //拷贝
                                let leaf = $vue.$store.getters.treeInfo.nisleaf;
                                if (leaf == '1') {
                                    let dataColumns = optionCurrent.getData.columns;
                                    dataColumns = dataColumns.filter(function(item) {
                                        return !item.show;
                                    });
                                    optionCurrent.getData.columns = dataColumns;
                                    return optionCurrent;
                                }
                                return optionCurrent;
                            },
                            "deepCopy": function(obj) { //深拷贝
                                var result = Array.isArray(obj) ? [] : {};
                                for (var key in obj) {
                                    if (obj.hasOwnProperty(key)) {
                                        if (typeof obj[key] === 'object') {
                                            result[key] = this.deepCopy(obj[key]); //递归复制
                                        } else {
                                            result[key] = obj[key];
                                        }
                                    }
                                }
                                return result;
                            }
                        }
                    }
                },
                {
                    "xtype": "chart",
                    "id": "lrb3001",
                    "text": "预付账款（万元/%）",
                    "unit": "万元",
                    "watchState": true,
                    "watchValue": true, //是不是当数据都为零时，不显示。
                    "weight": 12,
                    "config": {
                        "sql": "WITH NOWYEAR AS( SELECT DISTINCT DIM_PERIOD,SUM(FACT_BALANCE) AS FACT_BALANCE FROM DW_FACTAGEANALYSIS WHERE DIM_PERIOD BETWEEN (TO_CHAR(TO_DATE(:period,'YYYYMM')-INTERVAL '11' MONTH,'YYYYMM')) AND :period AND DIM_CUSUPPLIERNAME IS NOT NULL AND DIM_COMPANY IN (SELECT SCODE FROM DW_DIMCOMPANY WHERE (SCODE LIKE :company||'%' OR SCODE=:company) AND STYPE='1' AND CISDEL='N') AND DIM_ITEM='1002' GROUP BY DIM_PERIOD), LASTYEAR AS ( SELECT DISTINCT DIM_PERIOD,SUM(FACT_BALANCE) AS FACT_BALANCE FROM DW_FACTAGEANALYSIS WHERE DIM_PERIOD like '%12' AND DIM_CUSUPPLIERNAME IS NOT NULL AND DIM_COMPANY IN (SELECT SCODE FROM DW_DIMCOMPANY WHERE (SCODE LIKE :company||'%' OR SCODE=:company) AND STYPE='1' AND CISDEL='N') AND DIM_ITEM='1002' GROUP BY DIM_PERIOD) SELECT :company AS DIM_COMPANY, C.SCODE as period,SAFE,PROMPT, (CASE WHEN (NVL(B.FACT_BALANCE,0))=0 THEN 0 ELSE ROUND((NVL(A.FACT_BALANCE,0)-NVL(B.FACT_BALANCE,0))/(NVL(B.FACT_BALANCE,0)),4) END) AS ZJL, NVL(A.FACT_BALANCE,0) AS YE FROM NOWYEAR A LEFT JOIN LASTYEAR B ON SUBSTR(A.DIM_PERIOD,1,4)=to_char(to_number(SUBSTR(B.DIM_PERIOD,1,4))+1) RIGHT JOIN (SELECT DISTINCT SCODE,SUM(CASE WHEN SRATIOTYPE='1' THEN D.FACT_A ELSE 0 END) AS SAFE, SUM(CASE WHEN SRATIOTYPE='2' THEN D.FACT_A ELSE 0 END ) AS PROMPT FROM (SELECT '1' AS FLAG,SCODE,CTYPE FROM DW_DIMPERIOD) A LEFT JOIN (SELECT '1' AS FLAG,SRATIOTYPE,FACT_A FROM DW_FACTAGEANALYSIS_PERCENT WHERE DIM_PERIOD=:period AND DIM_COMPANY=:company) D ON D.FLAG=A.FLAG WHERE A.SCODE BETWEEN (TO_CHAR(TO_DATE(:period,'YYYYMM')-INTERVAL '11' MONTH,'YYYYMM')) AND :period AND CTYPE='4' GROUP BY SCODE) C ON A.DIM_PERIOD=C.SCODE ORDER BY C.SCODE",
                        "_cubes": {
                            "subject": "0002",
                            "dims": {
                                "itemperiod": "1416001,1403100,1400111",
                                "period": 0
                            },
                            "dimName": "period",
                            "cubeId": 2
                        },
                        "random": {
                            "min": 100,
                            "max": 100000
                        },
                        "mainDim": "period",
                        "needDims": ["company", "year", "month"],
                        "type": 1,
                        "generateVar": {
                            "periodCount": 2,
                            "compareType": "-1&0",
                            "reverse": true
                        },
                        "rows": [],
                        "columns": [{
                                "id": "period",
                                "type": "string",
                                "text": "日期"
                            },
                            {
                                "id": "safe",
                                "type": "number",
                                "text": "安全值"
                            },
                            {
                                "id": "prompt",
                                "type": "number",
                                "text": "预警值"
                            },
                            {
                                "id": "zjl",
                                "type": "number",
                                "text": "与年初相比增减率"
                            },
                            {
                                "id": "ye",
                                "type": "number",
                                "text": "本年累计"
                            }
                        ]
                    },
                    "listeners": [{
                        "type": "click",
                        "clickBefore": function(params, $vue) {
                            if (!$vue.$store.getters.treeInfo.leaf) {
                                params.sourceApi = "/cnbi/json/source/tjsp/dashYfzkDrill.json";
                                //    params.sourceApi = "cnbi/json/source/tjsp/yfzk.json";
                                return params;
                            }
                            params.sourceApi = "/cnbi/json/source/tjsp/dashYfzkDrill.json";
                            return params;
                        },
                        "way": "addTab",
                        "sourceApi": "/cnbi/json/source/tjsp/yszkDebug.json",
                        "handler": ($vue, params, modeHandle) => {
                            let selectPeriod = params.name;
                            let data;
                            if (selectPeriod) {
                                $vue.$store.selectPeriod = selectPeriod;
                            }
                        }
                    }],
                    "conversionUnit": function(unit) {
                        let me = this;
                        let unitObjs = [
                            { "text": "万元", "value": 10000 },
                            { "text": "千元", "value": 1000 },
                            { "text": "百元", "value": 100 },
                            { "text": "十元", "value": 10 },
                            { "text": "元", "value": 1 }
                        ];
                        if (!unit) {
                            unit = me.unit;
                        }
                        if (!unit) {
                            unit = "元";
                        }
                        for (let i = 0; i < unitObjs.length; i++) {
                            let unitItem = unitObjs[i];
                            if (unitItem.text == unit) {
                                return unitItem.value;
                            }
                        }
                        return 1;
                    },
                    "queryDataAfter": function(data) {
                        let me = this;
                        let columns = me.options.getData.columns;
                        let unit = me.unit;
                        unit = me.conversionUnit(unit);
                        if (columns && columns.length > 0) {
                            for (let i = 0; i < data.length; i++) {
                                let dataItem = data[i];
                                for (let j = 0; j < columns.length; j++) {
                                    let columnItem = columns[j];
                                    if (columnItem.unit && columnItem.unit == "万元") {
                                        let columnId = columnItem.id;
                                        if (dataItem[columnId]) {
                                            dataItem[columnId] = dataItem[columnId] / (unit ? unit : 10000);
                                        }
                                    }
                                }
                            }
                        }
                        return data;
                    },
                    "options": {
                        "type": "line",
                        "getData": {
                            "type": 5,
                            "columns": [{
                                    "id": "period",
                                    "type": "category"
                                },
                                {
                                    "id": "zjl",
                                    "name": "与年初相比增减率",
                                    "type": "line",
                                    "smooth": false,
                                    "unit": "%"
                                },
                                {
                                    "id": "safe",
                                    "name": "安全值",
                                    "type": "line",
                                    "smooth": false,
                                    "unit": "%",
                                    "show": "leaf" //子公司不显示
                                },
                                {
                                    "id": "prompt",
                                    "name": "预警值",
                                    "type": "line",
                                    "smooth": false,
                                    "unit": "%",
                                    "show": "leaf" //子公司不显示
                                },
                                {
                                    "id": "ye",
                                    "name": "本年累计",
                                    "type": "bar",
                                    "smooth": false,
                                    "unit": "万元"
                                }
                            ]
                        },
                        //    "color":['#1FE5BD','#A5AEFF','#26BAEE','#FE5578']zdk 2019-1-8 14:09:00  ly 和 boss说不要红色橙色，这有特殊意义
                        "color": ['#9a7fd1', '#07a2a4', '#FE5578', '#2ec7c9'], //紫色变化率，绿色安全，红色预警，淡蓝柱图
                        "optionListeners": { //生成图形的回调，可以之前或者是之后，处理option，要显示的指定内容。
                            "type": "before",
                            "handlerBefore": function($vue, option) {
                                let me = this,
                                    optionCurrent;
                                optionCurrent = me.deepCopy(option); //拷贝
                                let leaf = $vue.$store.getters.treeInfo.nisleaf;
                                if (leaf == '1') {
                                    let dataColumns = optionCurrent.getData.columns;
                                    dataColumns = dataColumns.filter(function(item) {
                                        return !item.show;
                                    });
                                    optionCurrent.getData.columns = dataColumns;
                                    return optionCurrent;
                                }
                                return optionCurrent;
                            },
                            "deepCopy": function(obj) { //深拷贝
                                var result = Array.isArray(obj) ? [] : {};
                                for (var key in obj) {
                                    if (obj.hasOwnProperty(key)) {
                                        if (typeof obj[key] === 'object') {
                                            result[key] = this.deepCopy(obj[key]); //递归复制
                                        } else {
                                            result[key] = obj[key];
                                        }
                                    }
                                }
                                return result;
                            }
                        }
                    }
                }

                , {
                    "xtype": "chart",
                    "id": "lrb3002",
                    "text": "其他应收款（万元/%）",
                    "unit": "万元",
                    "watchState": true,
                    "watchValue": true, //是不是当数据都为零时，不显示。
                    "weight": 12,
                    "config": {
                        "sql": "WITH NOWYEAR AS( SELECT DISTINCT DIM_PERIOD,SUM(FACT_BALANCE) AS FACT_BALANCE FROM DW_FACTAGEANALYSIS WHERE DIM_PERIOD BETWEEN (TO_CHAR(TO_DATE(:period,'YYYYMM')-INTERVAL '11' MONTH,'YYYYMM')) AND :period AND DIM_CUSUPPLIERNAME IS NOT NULL AND DIM_COMPANY IN (SELECT SCODE FROM DW_DIMCOMPANY WHERE (SCODE LIKE :company||'%' OR SCODE=:company) AND STYPE='1' AND CISDEL='N') AND DIM_ITEM='1003' GROUP BY DIM_PERIOD), LASTYEAR AS ( SELECT DISTINCT DIM_PERIOD,SUM(FACT_BALANCE) AS FACT_BALANCE FROM DW_FACTAGEANALYSIS WHERE DIM_PERIOD like '%12' AND DIM_CUSUPPLIERNAME IS NOT NULL AND DIM_COMPANY IN (SELECT SCODE FROM DW_DIMCOMPANY WHERE (SCODE LIKE :company||'%' OR SCODE=:company) AND STYPE='1' AND CISDEL='N') AND DIM_ITEM='1003' GROUP BY DIM_PERIOD) SELECT :company AS DIM_COMPANY, C.SCODE as period,SAFE,PROMPT, (CASE WHEN (NVL(B.FACT_BALANCE,0))=0 THEN 0 ELSE ROUND((NVL(A.FACT_BALANCE,0)-NVL(B.FACT_BALANCE,0))/(NVL(B.FACT_BALANCE,0)),4) END) AS ZJL, NVL(A.FACT_BALANCE,0) AS YE FROM NOWYEAR A LEFT JOIN LASTYEAR B ON SUBSTR(A.DIM_PERIOD,1,4)=to_char(to_number(SUBSTR(B.DIM_PERIOD,1,4))+1) RIGHT JOIN (SELECT DISTINCT SCODE,SUM(CASE WHEN SRATIOTYPE='1' THEN D.FACT_A ELSE 0 END) AS SAFE, SUM(CASE WHEN SRATIOTYPE='2' THEN D.FACT_A ELSE 0 END ) AS PROMPT FROM (SELECT '1' AS FLAG,SCODE,CTYPE FROM DW_DIMPERIOD) A LEFT JOIN (SELECT '1' AS FLAG,SRATIOTYPE,FACT_A FROM DW_FACTAGEANALYSIS_PERCENT WHERE DIM_PERIOD=:period AND DIM_COMPANY=:company) D ON D.FLAG=A.FLAG WHERE A.SCODE BETWEEN (TO_CHAR(TO_DATE(:period,'YYYYMM')-INTERVAL '11' MONTH,'YYYYMM')) AND :period AND CTYPE='4' GROUP BY SCODE) C ON A.DIM_PERIOD=C.SCODE ORDER BY C.SCODE",
                        "_cubes": {
                            "subject": "0002",
                            "dims": {
                                "itemperiod": "1416001,1403100,1400111",
                                "period": 0
                            },
                            "dimName": "period",
                            "cubeId": 2
                        },
                        "random": {
                            "min": 100,
                            "max": 100000
                        },
                        "mainDim": "period",
                        "needDims": ["company", "year", "month"],
                        "type": 1,
                        "generateVar": {
                            "periodCount": 2,
                            "compareType": "-1&0",
                            "reverse": true
                        },
                        "rows": [],
                        "columns": [{
                                "id": "period",
                                "type": "string",
                                "text": "日期"
                            },
                            {
                                "id": "safe",
                                "type": "number",
                                "text": "安全值"
                            },
                            {
                                "id": "prompt",
                                "type": "number",
                                "text": "预警值"
                            },
                            {
                                "id": "zjl",
                                "type": "number",
                                "text": "与年初相比增减率"
                            },
                            {
                                "id": "ye",
                                "type": "number",
                                "text": "本年累计"
                            }
                        ]

                    },
                    "queryDataAfter": function(data) {
                        let me = this;
                        if (me.config.rows && me.config.rows.length == 0) {

                        }
                        return data;
                    },
                    "listeners": [{
                        "type": "click",
                        "clickBefore": function(params, $vue) {
                            if (!$vue.$store.getters.treeInfo.nisleaf) {
                                params.sourceApi = "/cnbi/json/source/tjsp/dashQtyskDrill.json";
                                return params;
                            }
                            params.sourceApi = "/cnbi/json/source/tjsp/dashQtyskDrill.json";
                            return params;
                        },
                        "way": "addTab",
                        "sourceApi": "/cnbi/json/source/tjsp/dashQtyskDrill.json",
                        "handler": ($vue, params) => {
                            let selectPeriod = params.name;
                            if (selectPeriod) {
                                $vue.$store.selectPeriod = selectPeriod;
                                // $vue.$store.qtyszk = {
                                // 	selectPeriod:selectPeriod
                                // };
                            }
                        }
                    }],
                    "conversionUnit": function(unit) {
                        let me = this;
                        let unitObjs = [
                            { "text": "万元", "value": 10000 },
                            { "text": "千元", "value": 1000 },
                            { "text": "百元", "value": 100 },
                            { "text": "十元", "value": 10 },
                            { "text": "元", "value": 1 }
                        ];
                        if (!unit) {
                            unit = me.unit;
                        }
                        if (!unit) {
                            unit = "元";
                        }
                        for (let i = 0; i < unitObjs.length; i++) {
                            let unitItem = unitObjs[i];
                            if (unitItem.text == unit) {
                                return unitItem.value;
                            }
                        }
                        return 1;
                    },
                    "queryDataAfter": function(data) {
                        let me = this;
                        let columns = me.options.getData.columns;
                        let unit = me.unit;
                        unit = me.conversionUnit(unit);
                        if (columns && columns.length > 0) {
                            for (let i = 0; i < data.length; i++) {
                                let dataItem = data[i];
                                for (let j = 0; j < columns.length; j++) {
                                    let columnItem = columns[j];
                                    if (columnItem.unit && columnItem.unit == "万元") {
                                        let columnId = columnItem.id;
                                        if (dataItem[columnId]) {
                                            dataItem[columnId] = dataItem[columnId] / (unit ? unit : 10000);
                                        }
                                    }
                                }
                            }
                        }
                        return data;
                    },
                    "options": {
                        "type": "line",
                        "getData": {
                            "type": 5,
                            "columns": [{
                                    "id": "period",
                                    "type": "category"
                                },
                                {
                                    "id": "zjl",
                                    "name": "与年初相比增减率",
                                    "type": "line",
                                    "smooth": false,
                                    "unit": "%"
                                },
                                {
                                    "id": "safe",
                                    "name": "安全值",
                                    "type": "line",
                                    "smooth": false,
                                    "unit": "%",
                                    "show": "leaf" //子公司不显示
                                },
                                {
                                    "id": "prompt",
                                    "name": "预警值",
                                    "type": "line",
                                    "smooth": false,
                                    "unit": "%",
                                    "show": "leaf" //子公司不显示
                                },
                                {
                                    "id": "ye",
                                    "name": "本年累计",
                                    "type": "bar",
                                    "smooth": false,
                                    "unit": "万元"
                                }
                            ]
                        },
                        //    "color":['#1FE5BD','#A5AEFF','#26BAEE','#FE5578']			zdk 2019-1-8 14:09:00  ly 和 boss说不要红色橙色，这有特殊意义
                        "color": ['#9a7fd1', '#07a2a4', '#FE5578', '#2ec7c9'], //紫色变化率，绿色安全，红色预警，淡蓝柱图
                        "optionListeners": { //生成图形的回调，可以之前或者是之后，处理option，要显示的指定内容。
                            "type": "before",
                            "handlerBefore": function($vue, option) {
                                debugger;
                                let me = this,
                                    optionCurrent;
                                optionCurrent = me.deepCopy(option); //拷贝
                                let leaf = $vue.$store.getters.treeInfo.nisleaf;
                                if (leaf == '1') {
                                    let dataColumns = optionCurrent.getData.columns;
                                    dataColumns = dataColumns.filter(function(item) {
                                        return !item.show;
                                    });
                                    optionCurrent.getData.columns = dataColumns;
                                    return optionCurrent;
                                }
                                return optionCurrent;
                            },
                            "deepCopy": function(obj) { //深拷贝
                                var result = Array.isArray(obj) ? [] : {};
                                for (var key in obj) {
                                    if (obj.hasOwnProperty(key)) {
                                        if (typeof obj[key] === 'object') {
                                            result[key] = this.deepCopy(obj[key]); //递归复制
                                        } else {
                                            result[key] = obj[key];
                                        }
                                    }
                                }
                                return result;
                            }
                        }
                    }
                }

                , {
                    "xtype": "chart",
                    "id": "lrb3003",
                    "text": "资产、负债、权益（万元/%）",
                    "unit": "万元",
                    "watchState": true,
                    "watchValue": true,
                    "weight": 12,
                    "config": {
                        "sql": "SELECT :company AS DIM_COMPANY, B.SCODE, NVL((CASE WHEN ZCZE=0 THEN 0 ELSE ROUND(FZZE/ZCZE,4) END),0) AS ZCFZL, NVL(ZCZE,0) AS zcze,NVL(FZZE,0) AS fzze,NVL(QYZE,0) AS qyze FROM(SELECT DIM_PERIOD, SUM(CASE WHEN DIM_ITEMPOINT='1100100' THEN NVL(FACT_B,0) ELSE 0 END) AS ZCZE, SUM(CASE WHEN DIM_ITEMPOINT='1200100' THEN NVL(FACT_B,0) ELSE 0 END) AS FZZE, SUM(CASE WHEN DIM_ITEMPOINT='1300100' THEN NVL(FACT_B,0) ELSE 0 END) AS QYZE FROM DW_FACTFINANCEPOINT WHERE DIM_ITEMPOINT IN('1100100','1200100','1300100') AND DIM_PERIOD BETWEEN TO_CHAR((TO_DATE(:period,'YYYYMM')-INTERVAL '11' MONTH),'YYYYMM') AND :period AND DIM_COMPANY IN (SELECT SCODE FROM DW_DIMCOMPANY WHERE STYPE='1' AND CISDEL='N' START WITH SCODE=:company CONNECT BY PRIOR SCODE=SPCODE) GROUP BY DIM_PERIOD) A RIGHT JOIN DW_DIMPERIOD B ON B.SCODE=A.DIM_PERIOD WHERE B.SCODE BETWEEN TO_CHAR((TO_DATE(:period,'YYYYMM')-INTERVAL '11' MONTH),'YYYYMM') AND :period AND CTYPE='4' ORDER BY B.SCODE",
                        "_cubes": {
                            "subject": "0002",
                            "dims": {
                                "itemperiod": "1416001,1403100,1400111",
                                "period": 0
                            },
                            "dimName": "period",
                            "cubeId": 2
                        },
                        "random": {
                            "min": 100,
                            "max": 100000
                        },
                        "mainDim": "period",
                        "needDims": ["company", "year", "month"],
                        "type": 1,
                        "generateVar": {
                            "periodCount": 2,
                            "compareType": "-1&0",
                            "reverse": true
                        },
                        "rows": [],
                        "columns": [{
                                "id": "scode",
                                "type": "string",
                                "text": "编码"
                            },
                            {
                                "id": "zcfzl",
                                "type": "number",
                                "text": "资产负债率"
                            },
                            {
                                "id": "zcze",
                                "type": "number",
                                "text": "资产总额"
                            },
                            {
                                "id": "fzze",
                                "type": "number",
                                "text": "负债总额"
                            },
                            {
                                "id": "qyze",
                                "type": "number",
                                "text": "权益总额"
                            }
                        ]
                    },
                    "listeners": [{
                        "type": "click",
                        "clickBefore": function(listeners, $vue, params) {
                            return listeners;
                        },
                        "way": "addTab",
                        "sourceApi": "/cnbi/json/source/tjsp/zcfzbDebug.json",
                        "handler": ($vue, params) => {
                            let selectPeriod = params.name;
                            let data;
                            if (selectPeriod) {
                                $vue.$store.selectPeriod = selectPeriod;
                                // $vue.$store.zcfzqy = {selectPeriod:selectPeriod};
                            }
                        }
                    }],
                    "conversionUnit": function(unit) {
                        let me = this;
                        let unitObjs = [
                            { "text": "万元", "value": 10000 },
                            { "text": "千元", "value": 1000 },
                            { "text": "百元", "value": 100 },
                            { "text": "十元", "value": 10 },
                            { "text": "元", "value": 1 }
                        ];
                        if (!unit) {
                            unit = me.unit;
                        }
                        if (!unit) {
                            unit = "元";
                        }
                        for (let i = 0; i < unitObjs.length; i++) {
                            let unitItem = unitObjs[i];
                            if (unitItem.text == unit) {
                                return unitItem.value;
                            }
                        }
                        return 1;
                    },
                    "queryDataAfter": function(data) {
                        let me = this;
                        let columns = me.options.getData.columns;
                        let unit = me.unit;
                        unit = me.conversionUnit(unit);
                        if (columns && columns.length > 0) {
                            for (let i = 0; i < data.length; i++) {
                                let dataItem = data[i];
                                for (let j = 0; j < columns.length; j++) {
                                    let columnItem = columns[j];
                                    if (columnItem.unit && columnItem.unit == "万元") {
                                        let columnId = columnItem.id;
                                        if (dataItem[columnId]) {
                                            dataItem[columnId] = dataItem[columnId] / (unit ? unit : 10000);
                                        }
                                    }
                                }
                            }
                        }
                        return data;
                    },
                    "options": {
                        "type": "line",
                        "getData": {
                            "type": 5,
                            "columns": [{
                                "id": "scode",
                                "type": "category"
                            }, {
                                "id": "zcfzl",
                                "name": "资产负债率",
                                "type": "line",
                                "smooth": false,
                                "unit": "%"
                            }, {
                                "id": "zcze",
                                "name": "资产总额",
                                "type": "bar",
                                "smooth": false,
                                "unit": "万元"
                            }, {
                                "id": "fzze",
                                "name": "负债总额",
                                "type": "bar",
                                "smooth": false,
                                "unit": "万元"
                            }, {
                                "id": "qyze",
                                "name": "权益总额",
                                "type": "bar",
                                "smooth": false,
                                "unit": "万元"
                            }]

                        },
                        // "color":['#26BAEE','#FE5578','#1BCDE1','#08B788']
                        "color": ['#9a7fd1', '#2ec7c9', '#1CD1A1', '#1875F0'] //zdk 2019-1-8 14:09:00  ly 和 boss说不要红色橙色，这有特殊意义
                    }
                },
                {
                    "xtype": "chart",
                    "id": "lrb3004",
                    "text": "融资性债务（万元/%）",
                    "unit": "万元",
                    "watchState": true,
                    "watchValue": true,
                    "weight": 12,
                    "config": {
                        "sql": "WITH TMP AS(SELECT SCODE,DIM_PERIOD,SUM(NVL(FACT_A,0)) AS FACT_A FROM DW_DIMFINANCE A LEFT JOIN (SELECT (select spcode from DW_DIMCOMPANY where scode = :company) AS DIM_COMPANY,DIM_FINANCE,SUBSTR(SREPAYDATE,1,6) AS DIM_PERIOD,SUM(NVL(FACT_A,0)) AS FACT_A FROM DW_FACTFINANCEDETAIL WHERE DIM_COMPANY IN(SELECT SCODE FROM DW_DIMCOMPANY WHERE STYPE='1' AND CISDEL='N' START WITH SCODE=:company CONNECT BY PRIOR SCODE=SPCODE) GROUP BY DIM_FINANCE,SREPAYDATE) B ON B.DIM_FINANCE LIKE A.SCODE||'%' WHERE (SPCODE LIKE '10%' OR SCODE='10') GROUP BY SCODE,DIM_PERIOD), TMP0 AS (SELECT SCODE AS XM,A.DIM_PERIOD,FACT_A AS JE,NVL(ZHCB,0) AS ZHCB FROM TMP A LEFT JOIN (SELECT DIM_FINANCE,SUBSTR(SREPAYDATE,1,6) AS DIM_PERIOD, (CASE WHEN SUM(NVL(FACT_A,0))=0 THEN 0 ELSE ROUND((SUM(NVL(FACT_A,0)*NVL(FACT_C,0))/SUM(NVL(FACT_A,0)*100)),4) END) AS ZHCB FROM DW_FACTFINANCEDETAIL A WHERE DIM_COMPANY IN(SELECT SCODE FROM DW_DIMCOMPANY WHERE STYPE='1' AND CISDEL='N' START WITH SCODE=:company CONNECT BY PRIOR SCODE=SPCODE) GROUP BY DIM_FINANCE,SUBSTR(SREPAYDATE,1,6)) B ON A.SCODE=B.DIM_FINANCE AND A.DIM_PERIOD=B.DIM_PERIOD AND A.DIM_PERIOD BETWEEN TO_CHAR((TO_DATE(:period,'YYYYMM')-INTERVAL '11' MONTH),'YYYYMM') AND :period) SELECT A.SCODE as period,NVL(JE,0) AS JE,NVL(ZHCB,0) AS ZHCB FROM DW_DIMPERIOD A LEFT JOIN TMP0 B ON A.SCODE=B.DIM_PERIOD AND XM='1001' WHERE A.SCODE BETWEEN TO_CHAR((TO_DATE(:period,'YYYYMM')-INTERVAL '11' MONTH),'YYYYMM') AND :period AND CTYPE='4' ORDER BY A.SCODE",
                        "_cubes": {
                            "subject": "0002",
                            "dims": {
                                "itemperiod": "1416001,1403100,1400111",
                                "period": 0
                            },
                            "dimName": "period",
                            "cubeId": 2
                        },
                        "random": {
                            "min": 100,
                            "max": 100000
                        },
                        "mainDim": "period",
                        "needDims": ["company", "year", "month"],
                        "type": 1,
                        "generateVar": {
                            "periodCount": 2,
                            "compareType": "-1&0",
                            "reverse": true
                        },
                        "rows": [],
                        "columns": [{
                                "id": "id",
                                "type": "string",
                                "text": "编码"
                            },
                            {
                                "id": "je",
                                "type": "number",
                                "text": "项目"
                            },
                            {
                                "id": "zhcb",
                                "type": "number",
                                "text": "本期数"
                            }
                        ]
                    },
                    "listeners": [{
                        "type": "click",
                        "way": "addTab",
                        "sourceApi": "/cnbi/json/source/tjsp/dashRzxzwDrill.json",
                        "handler": ($vue, params) => {
                            let selectPeriod = params.name;
                            let data;
                            if (selectPeriod) {
                                $vue.$store.selectPeriod = selectPeriod;
                            }
                        }
                    }],
                    "conversionUnit": function(unit) {
                        let me = this;
                        let unitObjs = [
                            { "text": "万元", "value": 10000 },
                            { "text": "千元", "value": 1000 },
                            { "text": "百元", "value": 100 },
                            { "text": "十元", "value": 10 },
                            { "text": "元", "value": 1 }
                        ];
                        if (!unit) {
                            unit = me.unit;
                        }
                        if (!unit) {
                            unit = "元";
                        }
                        for (let i = 0; i < unitObjs.length; i++) {
                            let unitItem = unitObjs[i];
                            if (unitItem.text == unit) {
                                return unitItem.value;
                            }
                        }
                        return 1;
                    },
                    "queryDataAfter": function(data) {
                        let me = this;
                        let columns = me.options.getData.columns;
                        let unit = me.unit;
                        unit = me.conversionUnit(unit);
                        if (columns && columns.length > 0) {
                            for (let i = 0; i < data.length; i++) {
                                let dataItem = data[i];
                                for (let j = 0; j < columns.length; j++) {
                                    let columnItem = columns[j];
                                    if (columnItem.unit && columnItem.unit == "万元") {
                                        let columnId = columnItem.id;
                                        if (dataItem[columnId]) {
                                            dataItem[columnId] = dataItem[columnId] / (unit ? unit : 10000);
                                        }
                                    }
                                }
                            }
                        }
                        return data;
                    },
                    "options": {
                        "type": "line",
                        "getData": {
                            "type": 5,
                            "columns": [{
                                    "id": "period",
                                    "type": "category"
                                },
                                {
                                    "id": "zhcb",
                                    "name": "综合融资成本率",
                                    "type": "line",
                                    "smooth": false,
                                    "unit": "%"
                                },
                                {
                                    "id": "je",
                                    "name": "融资性债务总额",
                                    "type": "bar",
                                    "smooth": false,
                                    "unit": "万元"
                                }
                            ]

                        },
                        "color": ['#9a7fd1', '#2ec7c9'] //zdk 2019-1-8 14:09:00  ly 和 boss说不要红色橙色，这有特殊意义
                    }
                },

                {
                    "xtype": "chart",
                    "id": "pie456",
                    "text": "资金集中度占比图（%）",
                    "watchState": true,
                    "weight": 6,
                    "config": {
                        "sql": "WITH TMP1 AS( SELECT ROOT_SCODE, COUNT(*) AS HS FROM ( SELECT CONNECT_BY_ROOT SCODE AS ROOT_SCODE, SCODE FROM DW_DIMCOMPANY WHERE STYPE = '1' AND CISDEL = 'N' CONNECT BY PRIOR SCODE = SPCODE) GROUP BY ROOT_SCODE ) , TMP2 AS ( SELECT SCODE, SNAME FROM DW_DIMCOMPANY WHERE ( CISDEL = 'N' AND STYPE <> 'R' AND SCODE = :company) ) , TMP3 AS ( SELECT ROOT_SCODE, COUNT(*) AS JZHS FROM ( SELECT CONNECT_BY_ROOT SCODE AS ROOT_SCODE, SCODE FROM DW_DIMCOMPANY WHERE STYPE = '1' AND CISDEL = 'N' CONNECT BY PRIOR SCODE = SPCODE ) A1 INNER JOIN ( SELECT DISTINCT DIM_COMPANY FROM DW_FACTCAPITALDETAIL WHERE DIM_PERIOD = :period ) A2 ON A1.SCODE = A2.DIM_COMPANY GROUP BY ROOT_SCODE ) , FACT AS ( SELECT SCODE, '集中度' AS JZD, JZHS, '非集中度' AS FJZD , NVL(HS - JZHS, 0) AS FJZHS , '管控面' AS GKM, FACT_C AS JZJE, '非管控面' AS FGKM , CASE WHEN SCODE = '1001' THEN NVL(FACT_A, 0) ELSE NVL(FACT_B, 0) END AS FJZJE FROM TMP2 T1 LEFT JOIN TMP1 T2 ON T1.SCODE = T2.ROOT_SCODE LEFT JOIN TMP3 T3 ON T1.SCODE = T3.ROOT_SCODE LEFT JOIN DW_FACTCAPITALDETAIL A ON ( T1.SCODE = A.DIM_COMPANY AND dim_accountbanks = 'SH' AND DIM_PERIOD = :period) ORDER BY SCODE ) SELECT 1 AS ID, JZD AS TEXT, JZJE AS A, GKM AS TEXT1, JZHS AS B FROM FACT UNION ALL SELECT 2 AS ID, FJZD, FJZJE, FGKM, FJZHS FROM FACT",
                        "_cubes": {
                            "subject": "0002",
                            "dims": {
                                "itemperiod": "1416001,1403100,1400111",
                                "period": 0
                            },
                            "dimName": "period",
                            "cubeId": 2
                        },
                        "random": {
                            "min": 100,
                            "max": 100000
                        },
                        "mainDim": "period",
                        "needDims": ["company", "year", "month"],
                        "type": 1,
                        "generateVar": {
                            "periodCount": 2,
                            "compareType": "0&-1",
                            "reverse": true
                        },
                        "rows": [],
                        "columns": [{
                                "id": "scode",
                                "type": "string",
                                "text": "编码"
                            },
                            {
                                "id": "text",
                                "type": "string",
                                "text": "项目"
                            },
                            {
                                "id": "A",
                                "type": "number",
                                "text": "集中金额"
                            },
                            {
                                "id": "text1",
                                "type": "string",
                                "text": "项目"
                            },
                            {
                                "id": "B",
                                "type": "number",
                                "text": "金额"
                            }
                        ]
                    },
                    "queryDataAfter": function(data) {

                        let me = this;
                        let rows = me.config.rows;
                        if (rows && rows.length == 0) {

                        }
                        return data;
                    },
                    "listeners": [{
                        "type": "click",
                        "way": "addTab",
                        "sourceApi": "/cnbi/json/source/tjsp/zjjzqkhzDash.json",
                        "handler": ($vue, params) => {

                            console.log(params);
                        }
                    }],
                    "options": {
                        "type": "advancechart",
                        "subType": "pie",
                        "unUseDefaultConfig": true,
                        "getData": {
                            "type": 2,
                            "columns": [{
                                    "id": "text",
                                    "prop": "name"
                                },
                                {
                                    "id": "A",
                                    "prop": "value"
                                }
                            ],
                            "scope": true
                        }
                    },
                    "chartListeners": {
                        "way": "transChartOption",
                        "transChartOption": function(option, that) {

                            let me = this,
                                numFlag = 0;
                            let data = option.series[0].data,
                                dataRes = [];
                            if (data && data.length > 0) {
                                // let FirstData = data[0];
                                // let twoData = data[1];
                                // if(){}
                                data.forEach(function(item, index) {
                                    if (item.value == 0) {
                                        numFlag++;
                                    }
                                });
                                if (numFlag == 1) {
                                    data.forEach(function(item, index) {
                                        if (item.value != 0) {
                                            dataRes.push(item);
                                        }
                                    });
                                    option.series[0].data = dataRes;
                                };
                            };
                            return option;
                        }
                    },
                    "chartOptions": {
                        "dd": "this.item.text",
                        "unitObj": {
                            "mult": 10000,
                            "unitName": "万元"
                        },
                        "title": {
                            "text": "this.item.text",
                            "x": "center",
                            "top": 10,
                            "textStyle": {
                                "fontSize": 16,
                                "color": "#8796B0"
                            }
                        },
                        // "graphic": [
                        // 	{ //设置饼状图内部文字
                        // 		"type": "text",
                        // 		"left": "center", //设置偏移量
                        // 		"top": 180,
                        // 		"z": 2,
                        // 		"zlevel": 100,
                        // 		"style": {
                        // 			"text": "文字内容",
                        // 			"x": 100,
                        // 			"y": 100,
                        // 			"textAlign": "center",
                        // 			"fill": "#89D4ED",
                        // 			"width": 200,
                        // 			"height": 200,
                        // 			"textFont": "bold 20px verdana"
                        // 		}
                        // 	}
                        // ],
                        "tooltip": {
                            "trigger": "item",
                            "formatter": "{b} : {c} ({d}%)"
                        },
                        "color": ['#1875F0', '#1CD1A1'],
                        "series": [{
                            "name": "",
                            "type": "pie",
                            "radius": "55%",
                            "center": ["50%", "50%"],
                            "data": "this.item.options.datas",
                            "label": {
                                "position": "inside",
                                "formatter": function(params) {
                                    // 
                                    return params.name + "：" + params.percent + "%";
                                    // if(params.value == 0){
                                    // 	return "";
                                    // }else {
                                    // 	return params.name + "：" + params.percent + "%";
                                    // }
                                },
                            },
                            "itemStyle": {
                                "emphasis": {
                                    "shadowBlur": 10,
                                    "shadowOffsetX": 0,
                                    "shadowColor": "rgba(0, 0, 0, 0.5)"
                                }
                            }
                        }],
                        "legend": {
                            //    "orient": "vertical",
                            //    "left": "5%",
                            //    "top": "15%",
                            //    "data": "this.item.chartOptions.series[0].data.map(item=>{return item.name; })"	//zdk 注释  2019-1-8 09:25:05  boss 和 ly 说图例要放在下方
                            "bottom": 10,
                            "left": "center",
                            "data": "this.item.chartOptions.series[0].data.map(item=>{return item.name; })"
                        }
                    }
                },
                {
                    "xtype": "chart",
                    "id": "lrb3465",
                    "text": "资金管控面占比图（%）",
                    "unit": 1,
                    "watchState": true,
                    "weight": 6,
                    "config": {
                        "sql": "WITH TMP1 AS ( SELECT ROOT_SCODE, COUNT(*) AS HS FROM ( SELECT CONNECT_BY_ROOT SCODE AS ROOT_SCODE, SCODE FROM DW_DIMCOMPANY WHERE STYPE = '1' AND CISDEL = 'N' CONNECT BY PRIOR SCODE = SPCODE ) GROUP BY ROOT_SCODE ),  TMP2 AS ( SELECT SCODE, SNAME FROM DW_DIMCOMPANY WHERE (CISDEL = 'N' AND STYPE <> 'R' AND SCODE = :company) ),  TMP3 AS ( SELECT ROOT_SCODE, COUNT(*) AS JZHS FROM ( SELECT CONNECT_BY_ROOT SCODE AS ROOT_SCODE, SCODE FROM DW_DIMCOMPANY WHERE STYPE = '1' AND CISDEL = 'N' CONNECT BY PRIOR SCODE = SPCODE ) A1 INNER JOIN ( SELECT DISTINCT DIM_COMPANY FROM DW_FACTCAPITALDETAIL WHERE DIM_PERIOD = :period ) A2 ON A1.SCODE = A2.DIM_COMPANY GROUP BY ROOT_SCODE ),  FACT AS ( SELECT SCODE, '集中度' AS JZD, JZHS, '非集中度' AS FJZD , NVL(HS - JZHS, 0) AS FJZHS , '管控面' AS GKM, FACT_C AS JZJE, '非管控面' AS FGKM , CASE  WHEN SCODE = '1001' THEN NVL(FACT_A - FACT_C, 0) ELSE NVL(FACT_B, 0) END AS FJZJE FROM TMP2 T1 LEFT JOIN TMP1 T2 ON T1.SCODE = T2.ROOT_SCODE LEFT JOIN TMP3 T3 ON T1.SCODE = T3.ROOT_SCODE LEFT JOIN DW_FACTCAPITALDETAIL A ON (T1.SCODE = A.DIM_COMPANY  AND dim_accountbanks = 'SH' AND DIM_PERIOD = :period) ORDER BY SCODE ) SELECT 1 AS ID, JZD AS TEXT, JZJE AS A, GKM AS TEXT1, JZHS AS B FROM FACT UNION ALL SELECT 2 AS ID, FJZD, FJZJE, FGKM, FJZHS FROM FACT",
                        "_cubes": {
                            "subject": "0002",
                            "dims": {
                                "itemperiod": "1416001,1403100,1400111",
                                "period": 0
                            },
                            "dimName": "period",
                            "cubeId": 2
                        },
                        "random": {
                            "min": 100,
                            "max": 100000
                        },
                        "mainDim": "period",
                        "needDims": ["company", "year", "month"],
                        "type": 1,
                        "generateVar": {
                            "periodCount": 2,
                            "compareType": "0&-1",
                            "reverse": true
                        },
                        "rows": [],
                        "columns": [{
                                "id": "scode",
                                "type": "string",
                                "text": "编码"
                            },
                            {
                                "id": "text",
                                "type": "string",
                                "text": "项目"
                            },
                            {
                                "id": "A",
                                "type": "number",
                                "text": "集中金额"
                            },
                            {
                                "id": "text1",
                                "type": "string",
                                "text": "项目"
                            },
                            {
                                "id": "B",
                                "type": "number",
                                "text": "金额"
                            }
                        ]
                    },
                    "conversionUnit": function(unit) {
                        let me = this;
                        let unitObjs = [
                            { "text": "万元", "value": 10000 },
                            { "text": "千元", "value": 1000 },
                            { "text": "百元", "value": 100 },
                            { "text": "十元", "value": 10 },
                            { "text": "元", "value": 1 }
                        ];
                        if (!unit) {
                            unit = me.unit;
                        }
                        if (!unit) {
                            unit = "元";
                        }
                        for (let i = 0; i < unitObjs.length; i++) {
                            let unitItem = unitObjs[i];
                            if (unitItem.text == unit) {
                                return unitItem.value;
                            }
                        }
                        return 1;
                    },
                    "queryDataAfter": function(data) {
                        let me = this;
                        let columns = me.options.getData.columns;
                        let unit = me.unit;
                        if (!unit) {
                            unit = 1;
                        }
                        //unit = me.conversionUnit(unit);
                        if (columns && columns.length > 0) {
                            for (let i = 0; i < data.length; i++) {
                                let dataItem = data[i];
                                for (let j = 0; j < columns.length; j++) {
                                    let columnItem = columns[j];
                                    if (columnItem.unit && columnItem.unit == "万元") {
                                        let columnId = columnItem.id;
                                        if (dataItem[columnId]) {
                                            dataItem[columnId] = dataItem[columnId] / (unit ? unit : 10000);
                                        }
                                    }
                                }
                            }
                        }
                        return data;
                    },
                    "listeners": [{
                        "type": "click",
                        "way": "addTab",
                        "sourceApi": "/cnbi/json/source/tjsp/zjjzqkhzDash.json",
                        "handler": ($vue, params) => {
                            console.log(params);
                        }
                    }],
                    "options": {
                        "type": "advancechart",
                        "subType": "pie",
                        "unUseDefaultConfig": true,
                        "getData": {
                            "type": 2,
                            "columns": [{
                                    "id": "text1",
                                    "prop": "name"
                                },
                                {
                                    "id": "B",
                                    "prop": "value",
                                    "unit": "万元"
                                }
                            ],
                            "scope": true
                        }
                    },
                    "chartListeners": {
                        "way": "transChartOption",
                        "transChartOption": function(option, that) {

                            let me = this,
                                numFlag = 0;
                            let data = option.series[0].data,
                                dataRes = [],
                                legend = [];
                            if (data && data.length > 0) {
                                // let FirstData = data[0];
                                // let twoData = data[1];
                                // if(){}
                                data.forEach(function(item, index) {
                                    if (item.value == 0) {
                                        numFlag++;
                                    }
                                });
                                if (numFlag == 1) {
                                    data.forEach(function(item, index) {
                                        if (item.value != 0) {
                                            dataRes.push(item);
                                            legend.push(item.name);
                                        }
                                    });
                                    // option.legend.data = legend;
                                    option.series[0].data = dataRes;
                                };
                            };
                            return option;
                        }
                    },
                    "chartOptions": {
                        "dd": "this.item.text",
                        "unitObj": {
                            "mult": 1,
                            "unitName": "户"
                        },
                        "title": {
                            "text": "this.item.text",
                            "x": "center",
                            "top": 10,
                            "textStyle": {
                                "fontSize": 16,
                                "color": "#8796B0"
                            }
                        },
                        // "grid":{
                        // 	"containLabel":true
                        // },
                        "tooltip": {
                            "trigger": "item",
                            "formatter": "{b} : {c} ({d}%)"
                        },
                        "color": ['#1875F0', '#1CD1A1'],
                        "series": [{
                            "name": "",
                            "type": "pie",
                            "radius": "55%",
                            // "startAngle":180,
                            "center": ["50%", "50%"],
                            "data": "this.item.options.datas",
                            "label": {
                                "position": "inside",
                                "formatter": function(params) {
                                    return params.name + "：" + params.percent + "%";
                                },
                            },
                            "itemStyle": {
                                "emphasis": {
                                    "shadowBlur": 10,
                                    "shadowOffsetX": 0,
                                    "shadowColor": "rgba(0, 0, 0, 0.5)"
                                }
                            }
                        }],
                        // "legend": {
                        // 	"orient": "vertical",
                        // 	"left": "5%",
                        // 	"top": "15%",
                        // 	"data": "this.item.chartOptions.series[0].data.map(item=>{return item.name; })"
                        // }		//zdk 注释  2019-1-8 09:25:05  boss 和 ly 说图例要放在下方
                        "legend": {
                            "bottom": 10,
                            "left": "center",
                            "data": "this.item.chartOptions.series[0].data.map(item=>{return item.name; })"
                        },
                    }
                }



            ]
        }

    ]
}