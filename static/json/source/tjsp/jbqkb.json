{
    "id": "001408",
    "text": "基本情况表",
    "layout": {
        "xtype": "tab"
    },
    "showDims": ["year","month","company","conversion"],
    "changeCompanyBefore":function(newcompany,option){
        option.closeTabTaget(newcompany,option);
    },
    "changeYearBefore":function(newyear,option){
        option.closeTabTaget(newyear,option);
    },
    "changeMonthBefore":function(newmonth,option){
        debugger
        option.closeTabTaget(newmonth,option);
    },
    "__queryDataAfter":function(data,$vue){//数据的后置处理
        debugger
        let me = this;
        if(me.id==="001408"){
            data.forEach(res => {
                if(res.scode == "31" || res.scode == "30"){
                    res.bqdys = 0 ;
                    res.bqljs = 0 ;
                    res.sndys = 0 ;
                    res.snljs = 0 ;
                }else if(res.scode=="3001" || res.scode=="3002" || res.scode=="300101"){
                    res.bqdys = 0 ; 
                    res.sndys = 0 ; 
                }
            });
        }
        me.items[0].updateView = $vue.updateView;
        me.items[0].$vue = $vue;
        return data;
    },
    "config": {
        //"sql": "SELECT SCODE,(CASE WHEN SCODE IN('3001','3002','3003','3101','3102') THEN '2' WHEN SCODE IN ('300101','300301','310101','310201','3201') THEN '4' WHEN SCODE IN ('30','31','32') THEN '0' ELSE '6' END) AS EVEL,SNAME,BQDYS,BQLJS, SNDYS,SNLJS FROM (SELECT A.SCODE AS SCODE,A.SNAME AS SNAME,SUM(NVL(B.FACT_A,0)) AS BQDYS,SUM(NVL(B.FACT_B,0)) AS BQLJS, SUM(NVL(FACT_C,0)) SNDYS, SUM(NVL(FACT_D,0)) SNLJS FROM ( SELECT SCODE,SNAME,DIM_ITEMREPORT FROM DW_DIMITEM WHERE SCODE LIKE '3%' AND SCODE<>'3' AND DIM_ITEMREPORT='1007') A LEFT JOIN ( SELECT SUBJECT,DIM_ITEM,FACT_A,FACT_B, FACT_C, FACT_D FROM DW_FACTBASICSITUATION WHERE DIM_COMPANY IN (SELECT SCODE FROM DW_DIMCOMPANY WHERE STYPE='1' AND CISDEL='N' START WITH SCODE=:company CONNECT BY PRIOR SCODE=SPCODE) AND DIM_PERIOD=:period) B ON A.SCODE = B.DIM_ITEM GROUP BY A.SCODE,A.SNAME ORDER BY A.SCODE) ",
        "sql":" SELECT SCODE,( CASE WHEN SCODE IN('3001', '3002', '3003', '3101', '3102') THEN '2' WHEN SCODE IN ('300101', '300301', '310101', '310201', '3201') THEN '4' WHEN SCODE IN ('30', '31', '32') THEN '0' ELSE '6' END) AS EVEL, SNAME, BQDYS, BQLJS, SNDYS, SNLJS FROM ( SELECT A.SCODE AS SCODE, A.SNAME AS SNAME, sum(case when b.DIM_PERIOD=:period then (NVL(B.FACT_A,0)) else 0 end) AS BQDYS, sum(case when b.DIM_PERIOD=:period then (NVL(B.FACT_B,0)) else 0 end) AS BQLJS, SUM(case when b.DIM_PERIOD=:comparePeriod then (NVL(B.FACT_A,0)) else 0 end) AS snDYS, sum(case when b.DIM_PERIOD=:comparePeriod then (NVL(B.FACT_B,0)) else 0 end) AS snLJS FROM ( SELECT SCODE, SNAME, DIM_ITEMREPORT FROM DW_DIMITEM WHERE SCODE LIKE '3%' AND SCODE<>'3' AND DIM_ITEMREPORT='1007') A LEFT JOIN ( SELECT SUBJECT, DIM_ITEM, DIM_PERIOD, FACT_A, FACT_B FROM DW_FACTBASICSITUATION WHERE DIM_COMPANY IN ( SELECT SCODE FROM DW_DIMCOMPANY WHERE STYPE='1' AND CISDEL='N' START WITH SCODE=:company CONNECT BY PRIOR SCODE=SPCODE) AND DIM_PERIOD in (:period, :comparePeriod)) B ON A.SCODE = B.DIM_ITEM GROUP BY A.SCODE, A.SNAME ORDER BY A.SCODE) ",
        "cube": {
            "cubeId": 4 ,
            "subject": "1007"
        },
        "mainDim":"itemreport",
        "needDims":["year","month","company","conversion"],
        "random":{"min":100,"max":100000},
        "type":1 ,
        "tableHeads":true,
        "generateVar":{//生成变量rows
            "periodCount":2,
            "compareType":"-1&0",
            "reverse":true
        } 
    },
    "columns": [
        {
            "id" : "",
            "type" : "string",
            "text" : "上年同期数",
            "children": [
                {
                    "id" : "sndys",
                    "type" : "decimal",
                    "text" : "当月数",
                    "width": "150px"
                },
                {
                    "id" : "snljs",
                    "type" : "decimal",
                    "text" : "上年累计",
                    "width": "150px"
                }
            ]
        },
        {
            "id": "scode" ,
            "type": "string",
            "text": "编码",
            "hidden":true
        },
        {
            "id" : "sname",
            "type" : "string",
            "text" : "项目",
            "fixed": true,
            "width": "320px"
        },
        {
            "id" : "row",
            "type" : "index",
            "text" : "行次",
            "align": "center",
            "width": "60px"
        },
        {
            "id" : "",
            "type" : "string",
            "text" : "本期数",
            "children": [
                {
                    "id" : "bqdys",
                    "type" : "decimal",
                    "text" : "本月数",
                    "width": "150px"
                },
                {
                    "id" : "bqljs",
                    "type" : "decimal",
                    "text" : "本年累计",
                    "width": "150px"
                }
            ]
        }              
    ],
    "rows": [
        
    ],
    "items": [
        {
            "xtype": "bi-table",
            "id" : "jbqkb",
            "stype": "tree",
            "text" : "基本情况表",
            "toolbar":[{    
                "id":"1",
                "text":"刷新",
                "xtype":"button",
                "cellStyle":{
                    // "color":"black",
                    // "background-color":"#189271"
                    // "background-color":"#fff"
                },
                "handler":function(vue,btn){
                    debugger
                    console.log(vue);
                    let $vue = vue.item.$vue;
                    $vue.closeTabTaget({}, $vue);
                    vue.item.updateView("company");
                }
            },{
                "id":"2",
                "text":"导出",
                "xtype":"button",
                "cellStyle":{
                    // "color":"black",
                    // "background-color":"#189271"
                    // "background-color":"#fff"
                },
                "handler":function(vue,btn){
                    debugger
                    console.log(vue);
                    vue.handleDownload(vue);
                }
            }],
            "levelProperties":{sname:"evel"},   // 行缩进
            "drillProperties": ["sname"],       // 蓝色下钻
            "cellStyle":function(row,col){
                // debugger
                let css = "padding: 4px 0;";
                let pro = row.column.property;
                let textIndent ="";
                let record = row.row ;
                if (!pro) {
                    return css;
                }
                let levelProperties = this.levelProperties;
                let levelPro = levelProperties[pro];
                if (levelPro && record[levelPro]) {
                    let level = record[levelPro] || 1;
                    textIndent = level > 1 ? "text-indent: " + (level - 1) * 20 + "px;" : ";";
                }
                let drillProperties = this.drillProperties;
                if(drillProperties.indexOf(pro) != -1){
                    if((record.bqdys && record.bqdys != 0) || (record.bqljs && record.bqljs != 0) || (record.sndys && record.sndys != 0) || (record.snljs && record.snljs != 0)){
                        let drill = "text-decoration: none;color: #428bca;font-weight: bold;cursor: pointer;";
                        css = css + "font-weight:bold;" + textIndent + drill;
                        record.drill = true ;
                        return css;
                    }else{
                        return css + textIndent;
                    }
                }else{
                    return css + textIndent ;
                }
            },
            "onCellClick":function(row, column, cell, event,option){
                debugger
                // 符合下钻的列
                let pro = column.property;
                // 下钻的编码 or 下钻的名称
                let id = row.scode, text = row.sname;
                // 是否是下钻
                let drill = row.drill ;
                // 下钻的标识
                let drillProperties = this.drillProperties;
                if(drillProperties.indexOf(pro) != -1 && drill){
                    option.commonHandler(
                    {
                        "type":"click",//事件类型
                        "way":"addTab",//调用的公共方法
                        "sourceApi":"/cnbi/json/source/tjsp/jbqkbdebug2.json",
                        "handler":($vue,params)=>{//自定义的回调
                            console.info(params);
                        } 
                    },
                    { row: row, column: column, cell: cell, event: event },
                    { id: id, text: text }
                    );
                }
            }
        }
    ]
}