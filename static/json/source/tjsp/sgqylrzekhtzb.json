{

    "id": "1314520",
    "text": "市管企业利润总额考核调整表",
    "layout": {
        "xtype": "tab"
    },
    "showDims": ["year", "month", "company", "conversion"],
    "changeCompanyBefore": function(newcompany, option) {
        option.closeTabTaget(newcompany, option);
    },
    "changeYearBefore": function(newyear, option) {
        option.closeTabTaget(newyear, option);
    },
    "changeMonthBefore": function(newmonth, option) {
        // debugger
        option.closeTabTaget(newmonth, option);
    },
    "__queryDataAfter": function(data, $vue) { //数据的后置处理
        // debugger

        let me = this;
        me.items[0].updateView = $vue.updateView;
        me.items[0].$vue = $vue;
        return data;
    },
    "config": {
        "sql": "SELECT T1.SCODE, CASE WHEN T1.SCODE IN('220201', '220202', '220203', '220301', '220302') THEN '4' ELSE '0' END AS EVEL, T1.SNAME, SUM(NVL(FACT_A,0)) FACTA, SUM(NVL(FACT_B,0)) FACTB, to_char(SUM(NVL(FACT_C,0))) FACTC FROM( SELECT SCODE, SNAME FROM DW_DIMITEM WHERE SCODE LIKE '22%' AND SCODE NOT IN ('2204')) T1 LEFT JOIN ( SELECT DIM_COMPANY, DIM_ITEM, FACT_A , FACT_B , FACT_C FROM DW_FACTASSESSADJUST WHERE DIM_PERIOD=:period) T2 ON T1.SCODE = T2.DIM_ITEM GROUP BY T1.SCODE, T1.SNAME UNION ALL SELECT '2204' AS SCODE, '0' AS EVEL, '业绩利润' AS SNAME, (SUM(FACT_QA)-SUM(FACT_SA)) AS QYSB, (SUM(FACT_QB)-SUM(FACT_SB)) AS SWSSD, '' AS GZWHD FROM ( SELECT SUM(NVL(FACT_A,0)) FACT_QA, SUM(NVL(FACT_B,0)) FACT_QB, SUM(NVL(FACT_C,0)) FACT_QC, 0 AS FACT_SA, 0 AS FACT_SB, 0 AS FACT_SC FROM DW_FACTASSESSADJUST WHERE DIM_PERIOD=:period AND DIM_ITEM IN ('2201', '2202') UNION ALL SELECT 0 AS FACT_QA, 0 AS FACT_QB, 0 AS FACT_QC, SUM(NVL(FACT_A,0)) FACT_SA, SUM(NVL(FACT_B,0)) FACT_SB, SUM(NVL(FACT_C,0)) FACT_SC FROM DW_FACTASSESSADJUST WHERE DIM_PERIOD=:period AND DIM_ITEM IN ('2203' )) ORDER BY SCODE ",
        // "sql": "SELECT T1.SCODE, CASE WHEN T1.SCODE IN('220201','220202','220203','220301','220302') THEN '4' ELSE '0' END AS EVEL, T1.SNAME,SUM(NVL(FACT_A,0)) FACTA,SUM(NVL(FACT_B,0)) FACTB, SUM(NVL(FACT_C,0)) FACTC FROM (SELECT SCODE,SNAME FROM DW_DIMITEM WHERE SCODE LIKE '22%' AND SCODE NOT IN ('2204')) T1 LEFT JOIN (SELECT DIM_COMPANY,DIM_ITEM,FACT_A ,FACT_B ,FACT_C FROM DW_FACTASSESSADJUST WHERE DIM_PERIOD=:period) T2 ON T1.SCODE = T2.DIM_ITEM GROUP BY T1.SCODE,T1.SNAME UNION ALL SELECT '2204' AS SCODE,'0' AS EVEL,'业绩利润' AS SNAME,(SUM(FACT_QA)-SUM(FACT_SA)) AS QYSB,(SUM(FACT_QB)-SUM(FACT_SB)) AS SWSSD, (SUM(FACT_QC)-SUM(FACT_SC)) AS GZWHD FROM ( SELECT SUM(NVL(FACT_A,0)) FACT_QA,SUM(NVL(FACT_B,0)) FACT_QB,SUM(NVL(FACT_C,0)) FACT_QC,0 AS FACT_SA,0 AS FACT_SB,0 AS FACT_SC FROM DW_FACTASSESSADJUST WHERE DIM_PERIOD=:period AND DIM_ITEM IN ('2201','2202','220201','220202','220203') UNION ALL SELECT 0 AS FACT_QA,0 AS FACT_QB,0 AS FACT_QC,SUM(NVL(FACT_A,0)) FACT_SA,SUM(NVL(FACT_B,0)) FACT_SB,SUM(NVL(FACT_C,0)) FACT_SC FROM DW_FACTASSESSADJUST WHERE DIM_PERIOD=:period AND DIM_ITEM IN ('2203','220301','220302')) ORDER BY SCODE ",
        "_cube": {
            "cubeId": 4,
            "subject": "1004"
        },
        "mainDim": "item",
        "dimName": "item", //行项目的Id 
        "needDims": ["year", "month", "company", "conversion"],
        "random": { "min": 1000000, "max": 1000000000 },
        "type": 1
    },
    "columns": [{
            "id": "factc",
            "type": "decimal",
            "text": "国资委核定数",
            "width": "150px"
        },
        {
            "id": "id",
            "type": "string",
            "text": "编码",
            "hidden": true
        },
        {
            "id": "sname",
            "type": "string",
            "text": "项目",
            "fixed": true,
            "width": "300px"
        },
        {
            "id": "facta",
            "type": "decimal",
            "text": "企业申报数",
            "width": "150px"
        },
        {
            "id": "factb",
            "type": "decimal",
            "text": "事务所审定数",
            "width": "150px"
        }
    ],
    "rows": [
        
    ],
    "items": [{
        "xtype": "bi-table",
        "id": "sgqylrzekhtzb",
        "stype": false,
        "divContent": true,
        "text": "市管企业利润总额考核调整表",
        "toolbar": [{
            "id": "1",
            "text": "刷新",
            "xtype": "button",
            "cellStyle": {
                // "color": "black",
                // "background-color":"#189271"
                // "background-color": "#fff"
            },
            "handler": function(vue, btn) {
                // debugger
                console.log(vue);
                let $vue = vue.item.$vue;
                $vue.closeTabTaget({}, $vue);
                vue.item.updateView("company");
            }
        }, {
            "id": "2",
            "text": "导出",
            "xtype": "button",
            "cellStyle": {
                // "color": "black",
                // "background-color":"#189271"
                // "background-color": "#fff"
            },
            "handler": function(vue, btn) {
                // debugger
                console.log(vue);
                vue.handleDownload(vue);
            }
        }],
        //缩进处理
        "levelProperties": { sname: "evel" },
        "cellStyle": function(row, col) {
            // debugger
            let pro = row.column.property;
            let textIndent = "";
            let record = row.row;
            if (!pro) {
                return css;
            }
            let levelProperties = this.levelProperties;
            let levelPro = levelProperties[pro];
            if (levelPro && record[levelPro]) {
                let level = record[levelPro] || 1;
                textIndent = level > 1 ? "text-indent: " + (level - 1) * 20 + "px;" : ";";
            }
            return textIndent;
        },
        //合并单元格
        // "rowSpanAndColSpanHandler": function({row, column, rowIndex,columnIndex},option){
        //     // debugger
        //     if (rowIndex === 8) {
        //         if (columnIndex === 1) {
        //           return [1, 2];
        //         } else if (columnIndex === 2) {
        //           return [0, 0];
        //         }
        //     }
        // }
    }]
}