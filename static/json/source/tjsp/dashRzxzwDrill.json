{
    "id": "0039",
    "text": "债务构成情况分析表",
    "layout": {
        "xtype": "column"
    },
    "items": [{
        "xtype": "bi-table",
        "id": "zwgc",
        "text": "债务构成情况分析表",
        "tableBefore": true,
        "queryDataBefore": function(params, config, $vue) {
            let me = this;
            let selectPeriod = $vue.$store.selectPeriod;
            if (selectPeriod) {
                let year = selectPeriod.substring(0, 4);
                let month = selectPeriod.substring(4, 6);
                if (year) {
                    params.year = year;
                }
                if (month) {
                    params.month = month;
                }
                params.period = selectPeriod;
            }
            return params;
        },
        "config": {
            "sql": " WITH TMP AS( SELECT SCODE, SPCODE, SNAME, NLEVEL, CISLEAF, SUM(NVL(FACT_A,0)) AS FACT_A FROM DW_DIMFINANCE A LEFT JOIN ( SELECT :company AS DIM_COMPANY, DIM_FINANCE, SUM(NVL(FACT_A,0)) AS FACT_A FROM DW_FACTFINANCEDETAIL WHERE DIM_COMPANY IN ( SELECT SCODE FROM DW_DIMCOMPANY WHERE STYPE='1' AND CISDEL='N' START WITH SCODE= :company CONNECT BY PRIOR SCODE=SPCODE) AND DIM_PERIOD = :period GROUP BY DIM_FINANCE) B ON B.DIM_FINANCE LIKE A.SCODE||'%' WHERE ( SPCODE LIKE '10%' OR SCODE='10') GROUP BY SCODE, SPCODE, SNAME, NLEVEL, CISLEAF) , TMP1 AS ( SELECT SCODE, SPCODE, SNAME, NLEVEL, CISLEAF, FACT_A FROM TMP WHERE NLEVEL=1 ) , TMP2 AS ( SELECT SCODE, SPCODE, SNAME, NLEVEL, CISLEAF, FACT_A FROM TMP WHERE NLEVEL=2 ) , TMP3 AS ( SELECT SCODE, SPCODE, SNAME, NLEVEL, CISLEAF, FACT_A FROM TMP WHERE NLEVEL=3 ) , TMP4 AS ( SELECT SCODE, SPCODE, SNAME, NLEVEL, CISLEAF, FACT_A FROM TMP WHERE NLEVEL=4 ) , TMP0 AS ( SELECT SCODE, SNAME, NLEVEL, CISLEAF, NVL(ZHCB,0) AS ZHCB FROM TMP A LEFT JOIN ( SELECT DIM_FINANCE, ( CASE WHEN SUM(NVL(FACT_A,0))=0 THEN 0 ELSE ROUND((SUM(NVL(FACT_A,0)*NVL(FACT_C,0))/SUM(NVL(FACT_A,0))),4) END) AS ZHCB FROM DW_FACTFINANCEDETAIL A WHERE DIM_COMPANY IN ( SELECT SCODE FROM DW_DIMCOMPANY WHERE STYPE='1' AND CISDEL='N' START WITH SCODE= :company CONNECT BY PRIOR SCODE=SPCODE) AND DIM_PERIOD = :period GROUP BY DIM_FINANCE ) B ON A.SCODE=B.DIM_FINANCE ) , TMP5 AS ( SELECT '0' AS FLAG, A.SCODE, SNAME, NLEVEL, CISLEAF, JE, BZ*100 AS BZ, NVL(ZHCB,0) AS ZHCB FROM ( SELECT SCODE, SNAME, NLEVEL, CISLEAF, ZHCB FROM TMP0) A INNER JOIN ( SELECT SCODE, FACT_A AS JE, 0 AS BZ FROM TMP1 UNION ALL SELECT B.SCODE, B.FACT_A AS JE, ( CASE WHEN A.FACT_A=0 THEN 0 ELSE ROUND(B.FACT_A/A.FACT_A,4) END) AS BZ FROM TMP1 A INNER JOIN TMP2 B ON A.SCODE=B.SPCODE UNION ALL SELECT B.SCODE, B.FACT_A AS JE, ( CASE WHEN A.FACT_A=0 THEN 0 ELSE ROUND(B.FACT_A/A.FACT_A,4) END) AS BZ FROM TMP2 A INNER JOIN TMP3 B ON A.SCODE=B.SPCODE UNION ALL SELECT B.SCODE, B.FACT_A AS JE, ( CASE WHEN A.FACT_A=0 THEN 0 ELSE ROUND(B.FACT_A/A.FACT_A,4) END) AS BZ FROM TMP3 A INNER JOIN TMP4 B ON A.SCODE=B.SPCODE) B ON A.SCODE=B.SCODE ORDER BY A.SCODE ) , TMP6 AS ( SELECT :company AS DIM_COMPANY, DIM_FINANCE, SENDDATE, SSTARTDATE, ( CASE WHEN SENDDATE-SSTARTDATE<=10000 THEN (NVL(FACT_A,0)) ELSE 0 END) AS FACT_A1, ( CASE WHEN SENDDATE-SSTARTDATE>10000 AND SENDDATE-SSTARTDATE<=50000 THEN (NVL(FACT_A,0)) ELSE 0 END) AS FACT_A15, ( CASE WHEN SENDDATE-SSTARTDATE>50000 THEN (NVL(FACT_A,0)) ELSE 0 END) AS FACT_A16, ( CASE WHEN SENDDATE-SSTARTDATE<=10000 THEN (NVL(FACT_C,0)) ELSE 0 END) AS FACT_C1, ( CASE WHEN SENDDATE-SSTARTDATE>10000 AND SENDDATE-SSTARTDATE<=50000 THEN (NVL(FACT_C,0)) ELSE 0 END) AS FACT_C15, ( CASE WHEN SENDDATE-SSTARTDATE>50000 THEN (NVL(FACT_C,0)) ELSE 0 END) AS FACT_C16 FROM ( SELECT DIM_COMPANY, DIM_PERIOD, DIM_FINANCE,FACT_A,FACT_C, to_char(to_date(SSTARTDATE,'yyyy-mm-dd'),'yyyymmdd') as SSTARTDATE, (to_char(to_date(SENDDATE,'yyyy-mm-dd'),'yyyymmdd')) as SENDDATE FROM DW_FACTFINANCEDETAIL where regexp_like(SSTARTDATE,'\D+') or regexp_like(SENDDATE,'\D+') union all select DIM_COMPANY, DIM_PERIOD, DIM_FINANCE,FACT_A,FACT_C, SSTARTDATE,SENDDATE FROM DW_FACTFINANCEDETAIL where regexp_like(SSTARTDATE,'^+?[1-9][0-9]*$') and regexp_like(SENDDATE,'^+?[1-9][0-9]*$') ) WHERE DIM_COMPANY IN ( SELECT SCODE FROM DW_DIMCOMPANY WHERE STYPE='1' AND CISDEL='N' START WITH SCODE= :company CONNECT BY PRIOR SCODE=SPCODE) AND DIM_PERIOD=:period ) , TMP8 AS ( SELECT '2001' AS SCODE, FACT_A1 AS FACT_A, FACT_C1 FACT_C FROM TMP6 UNION ALL SELECT '2002', FACT_A15 , FACT_C15 FROM TMP6 UNION ALL SELECT '2003', FACT_A16, FACT_C16 FROM TMP6 ) , TMP9 AS ( SELECT '0' AS FLAG, D.SCODE, CASE WHEN RZCBL IS NULL THEN D.SNAME||'('||0||'%)' ELSE D.SNAME||'('||TO_CHAR(RZCBL,'0.99')||'%)' END SNAME, NLEVEL, CISLEAF, JE, BZ, 0 AS ZHCB FROM ( SELECT B.SCODE, CASE WHEN SUM(NVL(FACT_A,0))=0 THEN 0 ELSE ROUND(SUM(FACT_A*FACT_C)/SUM(FACT_A),2) END RZCBL, SUM(FACT_A) JE, CASE WHEN AVG(NVL(FACT_ASUM,0))=0 THEN 0 ELSE ROUND(SUM(B.FACT_A)/AVG(FACT_ASUM),4) END BZ FROM TMP8 B LEFT JOIN ( SELECT SUM(FACT_A) FACT_ASUM FROM TMP8) ON 1=1 GROUP BY B.SCODE) C RIGHT JOIN ( SELECT SCODE, SNAME, NLEVEL, CISLEAF FROM DW_DIMFINANCE WHERE SPCODE LIKE '20%') D ON C.SCODE=D.SCODE ) SELECT FLAG, SCODE, SNAME, NLEVEL, CISLEAF, NVL(JE,0) je, NVL(BZ,0) bz, ZHCB FROM TMP5 UNION ALL SELECT FLAG, SCODE, SNAME, NLEVEL, CISLEAF, NVL(JE,0), NVL(BZ*100,0) AS BZ, ZHCB FROM TMP9 UNION ALL SELECT DISTINCT FLAG, '20' AS SCODE, '二、年化融资成本情况(融资性债务)' AS SNAME, 1 AS NLEVEL, '0' AS CISLEAF, ( SELECT SUM(NVL(JE,0)) FROM TMP9) JE, ( SELECT SUM(NVL(BZ,0))*100 FROM TMP9) BZ, ZHCB FROM TMP9 ORDER BY SCODE",
            "_sql": " WITH TMP AS( SELECT SCODE, SPCODE, SNAME, NLEVEL, CISLEAF, SUM(NVL(FACT_A,0)) AS FACT_A FROM DW_DIMFINANCE A LEFT JOIN ( SELECT :company AS DIM_COMPANY, DIM_FINANCE, SUM(NVL(FACT_A,0)) AS FACT_A FROM DW_FACTFINANCEDETAIL WHERE DIM_COMPANY IN ( SELECT SCODE FROM DW_DIMCOMPANY WHERE STYPE='1' AND CISDEL='N' START WITH SCODE= :company CONNECT BY PRIOR SCODE=SPCODE) AND DIM_PERIOD = :period GROUP BY DIM_FINANCE) B ON B.DIM_FINANCE LIKE A.SCODE||'%' WHERE ( SPCODE LIKE '10%' OR SCODE='10') GROUP BY SCODE, SPCODE, SNAME, NLEVEL, CISLEAF), TMP1 AS ( SELECT SCODE, SPCODE, SNAME, NLEVEL, CISLEAF, FACT_A FROM TMP WHERE NLEVEL=1) , TMP2 AS ( SELECT SCODE, SPCODE, SNAME, NLEVEL, CISLEAF, FACT_A FROM TMP WHERE NLEVEL=2 ) , TMP3 AS ( SELECT SCODE, SPCODE, SNAME, NLEVEL, CISLEAF, FACT_A FROM TMP WHERE NLEVEL=3 ) , TMP4 AS ( SELECT SCODE, SPCODE, SNAME, NLEVEL, CISLEAF, FACT_A FROM TMP WHERE NLEVEL=4 ) , TMP0 AS ( SELECT SCODE, SNAME, NLEVEL, CISLEAF, NVL(ZHCB,0) AS ZHCB FROM TMP A LEFT JOIN ( SELECT DIM_FINANCE, ( CASE WHEN SUM(NVL(FACT_A,0))=0 THEN 0 ELSE ROUND((SUM(NVL(FACT_A,0)*NVL(FACT_C,0))/SUM(NVL(FACT_A,0))),4) END) AS ZHCB FROM DW_FACTFINANCEDETAIL A WHERE DIM_COMPANY IN ( SELECT SCODE FROM DW_DIMCOMPANY WHERE STYPE='1' AND CISDEL='N' START WITH SCODE= :company CONNECT BY PRIOR SCODE=SPCODE) AND DIM_PERIOD = :period GROUP BY DIM_FINANCE ) B ON A.SCODE=B.DIM_FINANCE ) , TMP5 AS ( SELECT '0' AS FLAG, A.SCODE, SNAME, NLEVEL, CISLEAF, JE, BZ*100 AS BZ, NVL(ZHCB,0) AS ZHCB FROM ( SELECT SCODE, SNAME, NLEVEL, CISLEAF, ZHCB FROM TMP0) A INNER JOIN ( SELECT SCODE, FACT_A AS JE, 0 AS BZ FROM TMP1 UNION ALL SELECT B.SCODE, B.FACT_A AS JE, ( CASE WHEN A.FACT_A=0 THEN 0 ELSE ROUND(B.FACT_A/A.FACT_A,4) END) AS BZ FROM TMP1 A INNER JOIN TMP2 B ON A.SCODE=B.SPCODE UNION ALL SELECT B.SCODE, B.FACT_A AS JE, ( CASE WHEN A.FACT_A=0 THEN 0 ELSE ROUND(B.FACT_A/A.FACT_A,4) END) AS BZ FROM TMP2 A INNER JOIN TMP3 B ON A.SCODE=B.SPCODE UNION ALL SELECT B.SCODE, B.FACT_A AS JE, ( CASE WHEN A.FACT_A=0 THEN 0 ELSE ROUND(B.FACT_A/A.FACT_A,4) END) AS BZ FROM TMP3 A INNER JOIN TMP4 B ON A.SCODE=B.SPCODE) B ON A.SCODE=B.SCODE ORDER BY A.SCODE ) , TMP6 AS ( SELECT :company AS DIM_COMPANY, DIM_FINANCE, SENDDATE,SSTARTDATE, (CASE WHEN SENDDATE-SSTARTDATE<=10000 THEN (NVL(FACT_A,0)) ELSE 0 END) AS FACT_A1, (CASE WHEN SENDDATE-SSTARTDATE>10000 AND SENDDATE-SSTARTDATE<=50000 THEN (NVL(FACT_A,0)) ELSE 0 END) AS FACT_A15, (CASE WHEN SENDDATE-SSTARTDATE>50000 THEN (NVL(FACT_A,0)) ELSE 0 END) AS FACT_A16, (CASE WHEN SENDDATE-SSTARTDATE<=10000 THEN (NVL(FACT_C,0)) ELSE 0 END) AS FACT_C1, (CASE WHEN SENDDATE-SSTARTDATE>10000 AND SENDDATE-SSTARTDATE<=50000 THEN (NVL(FACT_C,0)) ELSE 0 END) AS FACT_C15, (CASE WHEN SENDDATE-SSTARTDATE>50000 THEN (NVL(FACT_C,0)) ELSE 0 END) AS FACT_C16 FROM DW_FACTFINANCEDETAIL WHERE DIM_COMPANY IN ( SELECT SCODE FROM DW_DIMCOMPANY WHERE STYPE='1' AND CISDEL='N' START WITH SCODE= :company CONNECT BY PRIOR SCODE=SPCODE) AND DIM_PERIOD=:period), TMP8 AS( SELECT '2001' AS SCODE,FACT_A1 AS FACT_A, FACT_C1 FACT_C FROM TMP6 UNION ALL SELECT '2002', FACT_A15 , FACT_C15 FROM TMP6 UNION ALL SELECT '2003', FACT_A16, FACT_C16 FROM TMP6 ) , TMP9 AS ( SELECT '0' AS FLAG,D.SCODE,CASE WHEN RZCBL IS NULL THEN D.SNAME||'('||0||'%)' ELSE D.SNAME||'('||TO_CHAR(RZCBL,'0.99')||'%)' END SNAME, NLEVEL,CISLEAF, JE, BZ, 0 AS ZHCB FROM ( SELECT B.SCODE,CASE WHEN SUM(NVL(FACT_A,0))=0 THEN 0 ELSE ROUND(SUM(FACT_A*FACT_C)/SUM(FACT_A),2) END RZCBL,SUM(FACT_A) JE, CASE WHEN AVG(NVL(FACT_ASUM,0))=0 THEN 0 ELSE ROUND(SUM(B.FACT_A)/AVG(FACT_ASUM),4) END BZ FROM TMP8 B LEFT JOIN (SELECT SUM(FACT_A) FACT_ASUM FROM TMP8) ON 1=1 GROUP BY B.SCODE) C RIGHT JOIN (SELECT SCODE,SNAME,NLEVEL,CISLEAF FROM DW_DIMFINANCE WHERE SPCODE LIKE '20%') D ON C.SCODE=D.SCODE) SELECT FLAG, SCODE, SNAME, NLEVEL, CISLEAF, NVL(JE,0) je, NVL(BZ,0) bz, ZHCB FROM TMP5 UNION ALL SELECT FLAG, SCODE, SNAME, NLEVEL, CISLEAF, NVL(JE,0), NVL(BZ*100,0) AS BZ, ZHCB FROM TMP9 UNION ALL SELECT DISTINCT FLAG, '20' AS SCODE, '二、年化融资成本情况(融资性债务)' AS SNAME, 1 AS NLEVEL, '0' AS CISLEAF, (SELECT SUM(NVL(JE,0)) FROM TMP9) JE, (SELECT SUM(NVL(BZ,0))*100 FROM TMP9) BZ, ZHCB FROM TMP9 ORDER BY SCODE",
            "_cube": {
                "subject": "0007",
                "cubeId": 4
            },
            "mainDim": "itemperiod",
            "needDims": ["year", "month", "company", "conversion"],
            "random": { "min": 100, "max": 100000 },
            "type": 1,
            "columns": [{
                    "id": "zhcb",
                    "type": "decimal",
                    "text": "加权平均融资成本"
                },
                {
                    "id": "xh",
                    "type": "index",
                    "text": "序号",
                    "width": "60px"
                },
                {
                    "id": "sname",
                    "type": "string",
                    "text": "项目",
                    "width": "260px"
                }, {
                    "id": "je",
                    "type": "decimal",
                    "text": "金额"
                }, {
                    "id": "bz",
                    "type": "decimal",
                    "text": "比重（%）",
                    "conversion": "%"
                }
            ],
            "rows": []
        },
        // "drillProperties":["sname"],//有钻取，给蓝色
        "levelProperties": { "sname": "nlevel" }, //加缩进
        "__cellStyle": function(row) {
            let datas = this.datas;
            let record = [];
            record = datas[row.rowIndex];
            let css = "padding: 4px 0;";
            let pro = row.column.property; //列id
            if (!pro) {
                return css;
            }
            let levelProperties = this.levelProperties; //行缩进
            let textIndent = "";
            let levelPro = levelProperties[pro];
            if (levelPro && record[levelPro]) { //行缩进处理
                let level = record[levelPro] || 1;
                textIndent = level > 1 ? "text-indent: " + (level - 1) * 20 + "px;" : ";";
            }
            let drillProperties = this.drillProperties; //钻取列获取
            if (drillProperties.indexOf(pro) != -1) { //匹配需要下钻的列
                if (record.cisleaf && ((record.je && record.je != 0) || (record.bz && record.bz != 0) || (record.rzcb && record.rzcb != 0))) { //有数据时才显示蓝色，并且可以下钻(合计行不能下钻)
                    let drill = "text-decoration: none;color: #428bca;cursor: pointer;"; //可以下钻的科目的颜色的设置
                    css = css + "font-weight:bold;" + textIndent + drill;
                    datas[row.rowIndex].drill = true; //下钻设置
                    return css;
                } else {
                    return css + textIndent;
                }
            } else {
                return css + textIndent;
            }
        },
        "__onCellClick": function(row, column, cell, event, option) {
            let datas = this.datas;
            let data = datas.filter(function(item) {
                return item.id == row.id;
            });
            row = data[0];
            let cv = column.property + ""; //下钻行的标识
            let listener = row._drill || row.drill;
            if (listener && cv == "sname") {
                let text = row.sname; //下钻显示的标题
                let id = row.id;

                option.commonHandler({
                    "type": "click", //事件类型
                    "way": "addTab", //调用的公共方法
                    "sourceApi": "/cnbi/json/source/tjsp/zwgcqkDrill.json", //下钻json路径
                    "handler": ($vue, params) => { //自定义的回调
                        console.info(params);
                        // let pp = {id:params.xxx,xxx};
                        //  $vue.popop = pp; 
                    }
                }, {
                    row: row,
                    column: column,
                    cell: cell,
                    event: event
                }, {
                    id: id,
                    text: text
                });
            }
        }
    }]
}